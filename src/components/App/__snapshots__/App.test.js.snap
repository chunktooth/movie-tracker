// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should display log out when user is logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    clearFavoritesLogOut={[Function]}
    loadMovies={[Function]}
    location={
        Object {
            "pathname": "/",
          }
    }
    logOutUser={[Function]}
    user={
        Object {
            "id": 4,
            "name": "mud",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <div
                    className="nav-menu"
          >
                    <h3>
                              Hey, mud !
                    </h3>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="log-out"
                              onClick={[Function]}
                              to="/"
                    >
                              Log Out
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="show-favorites"
                              to="/favorites"
                    >
                              Show Favorites
                    </NavLink>
          </div>
          <h1>
                    Movie Tracker
          </h1>
</header>,
        <Switch>
          <Route
                    exact={true}
                    path="/"
                    render={[Function]}
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/login"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
          />
          <Route
                    exact={true}
                    path="/favorites"
                    render={[Function]}
          />
</Switch>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="nav-menu"
>
              <h3>
                            Hey, mud !
              </h3>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="log-out"
                            onClick={[Function]}
                            to="/"
              >
                            Log Out
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="show-favorites"
                            to="/favorites"
              >
                            Show Favorites
              </NavLink>
</div>,
            <h1>
              Movie Tracker
</h1>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Hey, mud !
</h3>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="log-out"
                  onClick={[Function]}
                  to="/"
>
                  Log Out
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="show-favorites"
                  to="/favorites"
>
                  Show Favorites
</NavLink>,
              ],
              "className": "nav-menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Hey, mud !",
                },
                "ref": null,
                "rendered": "Hey, mud !",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Log Out",
                  "className": "log-out",
                  "onClick": [Function],
                  "to": "/",
                },
                "ref": null,
                "rendered": "Log Out",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Show Favorites",
                  "className": "show-favorites",
                  "to": "/favorites",
                },
                "ref": null,
                "rendered": "Show Favorites",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Movie Tracker",
            },
            "ref": null,
            "rendered": "Movie Tracker",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              exact={true}
              path="/"
              render={[Function]}
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/login"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/signup"
/>,
            <Route
              exact={true}
              path="/favorites"
              render={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/signup",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/favorites",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <div
                        className="nav-menu"
            >
                        <h3>
                                    Hey, mud !
                        </h3>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="log-out"
                                    onClick={[Function]}
                                    to="/"
                        >
                                    Log Out
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="show-favorites"
                                    to="/favorites"
                        >
                                    Show Favorites
                        </NavLink>
            </div>
            <h1>
                        Movie Tracker
            </h1>
</header>,
          <Switch>
            <Route
                        exact={true}
                        path="/"
                        render={[Function]}
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/login"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/signup"
            />
            <Route
                        exact={true}
                        path="/favorites"
                        render={[Function]}
            />
</Switch>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="nav-menu"
>
                <h3>
                                Hey, mud !
                </h3>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="log-out"
                                onClick={[Function]}
                                to="/"
                >
                                Log Out
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="show-favorites"
                                to="/favorites"
                >
                                Show Favorites
                </NavLink>
</div>,
              <h1>
                Movie Tracker
</h1>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Hey, mud !
</h3>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="log-out"
                    onClick={[Function]}
                    to="/"
>
                    Log Out
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="show-favorites"
                    to="/favorites"
>
                    Show Favorites
</NavLink>,
                ],
                "className": "nav-menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Hey, mud !",
                  },
                  "ref": null,
                  "rendered": "Hey, mud !",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "Log Out",
                    "className": "log-out",
                    "onClick": [Function],
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "Show Favorites",
                    "className": "show-favorites",
                    "to": "/favorites",
                  },
                  "ref": null,
                  "rendered": "Show Favorites",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Movie Tracker",
              },
              "ref": null,
              "rendered": "Movie Tracker",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/"
                render={[Function]}
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/login"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
/>,
              <Route
                exact={true}
                path="/favorites"
                render={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/signup",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/favorites",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`App should match the snapshot without a user 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    user={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="nav"
                    to="/login"
          >
                    Log In / Sign Up
          </NavLink>
          <h1>
                    Movie Tracker
          </h1>
</header>,
        <Switch>
          <Route
                    exact={true}
                    path="/"
                    render={[Function]}
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/login"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
          />
          <Route
                    exact={true}
                    path="/favorites"
                    render={[Function]}
          />
</Switch>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="nav"
              to="/login"
>
              Log In / Sign Up
</NavLink>,
            <h1>
              Movie Tracker
</h1>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": "Log In / Sign Up",
              "className": "nav",
              "to": "/login",
            },
            "ref": null,
            "rendered": "Log In / Sign Up",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Movie Tracker",
            },
            "ref": null,
            "rendered": "Movie Tracker",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              exact={true}
              path="/"
              render={[Function]}
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/login"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/signup"
/>,
            <Route
              exact={true}
              path="/favorites"
              render={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/signup",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/favorites",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="nav"
                        to="/login"
            >
                        Log In / Sign Up
            </NavLink>
            <h1>
                        Movie Tracker
            </h1>
</header>,
          <Switch>
            <Route
                        exact={true}
                        path="/"
                        render={[Function]}
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/login"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/signup"
            />
            <Route
                        exact={true}
                        path="/favorites"
                        render={[Function]}
            />
</Switch>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="nav"
                to="/login"
>
                Log In / Sign Up
</NavLink>,
              <h1>
                Movie Tracker
</h1>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": "Log In / Sign Up",
                "className": "nav",
                "to": "/login",
              },
              "ref": null,
              "rendered": "Log In / Sign Up",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Movie Tracker",
              },
              "ref": null,
              "rendered": "Movie Tracker",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/"
                render={[Function]}
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/login"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
/>,
              <Route
                exact={true}
                path="/favorites"
                render={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/signup",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/favorites",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`App should render showHome when pathname is favorite 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    clearFavoritesLogOut={[Function]}
    loadMovies={[Function]}
    location={
        Object {
            "pathname": "/favorites",
          }
    }
    logOutUser={[Function]}
    user={
        Object {
            "id": 4,
            "name": "mud",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <div
                    className="nav-menu"
          >
                    <h3>
                              Hey, mud !
                    </h3>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="log-out"
                              onClick={[Function]}
                              to="/"
                    >
                              Log Out
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to="/"
                    >
                              Home
                    </NavLink>
          </div>
          <h1>
                    Movie Tracker
          </h1>
</header>,
        <Switch>
          <Route
                    exact={true}
                    path="/"
                    render={[Function]}
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/login"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
          />
          <Route
                    exact={true}
                    path="/favorites"
                    render={[Function]}
          />
</Switch>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="nav-menu"
>
              <h3>
                            Hey, mud !
              </h3>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="log-out"
                            onClick={[Function]}
                            to="/"
              >
                            Log Out
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to="/"
              >
                            Home
              </NavLink>
</div>,
            <h1>
              Movie Tracker
</h1>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Hey, mud !
</h3>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="log-out"
                  onClick={[Function]}
                  to="/"
>
                  Log Out
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
>
                  Home
</NavLink>,
              ],
              "className": "nav-menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Hey, mud !",
                },
                "ref": null,
                "rendered": "Hey, mud !",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Log Out",
                  "className": "log-out",
                  "onClick": [Function],
                  "to": "/",
                },
                "ref": null,
                "rendered": "Log Out",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Home",
                  "to": "/",
                },
                "ref": null,
                "rendered": "Home",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Movie Tracker",
            },
            "ref": null,
            "rendered": "Movie Tracker",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              exact={true}
              path="/"
              render={[Function]}
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/login"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/signup"
/>,
            <Route
              exact={true}
              path="/favorites"
              render={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/signup",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/favorites",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <div
                        className="nav-menu"
            >
                        <h3>
                                    Hey, mud !
                        </h3>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="log-out"
                                    onClick={[Function]}
                                    to="/"
                        >
                                    Log Out
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    to="/"
                        >
                                    Home
                        </NavLink>
            </div>
            <h1>
                        Movie Tracker
            </h1>
</header>,
          <Switch>
            <Route
                        exact={true}
                        path="/"
                        render={[Function]}
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/login"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/signup"
            />
            <Route
                        exact={true}
                        path="/favorites"
                        render={[Function]}
            />
</Switch>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="nav-menu"
>
                <h3>
                                Hey, mud !
                </h3>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="log-out"
                                onClick={[Function]}
                                to="/"
                >
                                Log Out
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                to="/"
                >
                                Home
                </NavLink>
</div>,
              <h1>
                Movie Tracker
</h1>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Hey, mud !
</h3>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="log-out"
                    onClick={[Function]}
                    to="/"
>
                    Log Out
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
>
                    Home
</NavLink>,
                ],
                "className": "nav-menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Hey, mud !",
                  },
                  "ref": null,
                  "rendered": "Hey, mud !",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "Log Out",
                    "className": "log-out",
                    "onClick": [Function],
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "Home",
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Home",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Movie Tracker",
              },
              "ref": null,
              "rendered": "Movie Tracker",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/"
                render={[Function]}
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/login"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
/>,
              <Route
                exact={true}
                path="/favorites"
                render={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/signup",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/favorites",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
